/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package clientsmtp;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Bertrand
 */
public class Connexion extends javax.swing.JFrame {
    private Socket skt;
    private BufferedReader in;
    private PrintWriter out;
    /**
     * Creates new form Connexion
     */
    public Connexion() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tf_user = new javax.swing.JTextField();
        lb_id = new javax.swing.JLabel();
        lb_mdp = new javax.swing.JLabel();
        tf_pass = new javax.swing.JPasswordField();
        lb_title = new javax.swing.JLabel();
        btn_apop = new javax.swing.JButton();
        btn_userpass = new javax.swing.JButton();
        lb_ipserv = new javax.swing.JLabel();
        tf_ipserv = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lb_id.setText("Identifiant :");

        lb_mdp.setText("Mot de passe :");

        lb_title.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lb_title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_title.setText("Client mail");

        btn_apop.setText("APOP");
        btn_apop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_apopActionPerformed(evt);
            }
        });

        btn_userpass.setText("USER / PASS");
        btn_userpass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_userpassActionPerformed(evt);
            }
        });

        lb_ipserv.setText("Ip serveur :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lb_ipserv)
                    .addComponent(lb_mdp)
                    .addComponent(lb_id))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btn_apop, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                        .addComponent(btn_userpass, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lb_title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tf_user)
                    .addComponent(tf_pass)
                    .addComponent(tf_ipserv))
                .addContainerGap(66, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lb_title, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lb_ipserv)
                    .addComponent(tf_ipserv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_user, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lb_id))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lb_mdp)
                    .addComponent(tf_pass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_apop)
                    .addComponent(btn_userpass))
                .addGap(33, 33, 33))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_apopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_apopActionPerformed
        if(!verfierChamps())
        {
            JOptionPane.showMessageDialog(null,"Veuillez remplir tous les champs"); 
            return;
        }
        String pass = new String(tf_pass.getPassword());
        try {
            skt = new Socket(tf_ipserv.getText(), 587);
            in = new BufferedReader(new InputStreamReader(skt.getInputStream()));
            out = new PrintWriter(skt.getOutputStream(), true);
            out.write("APOP "+tf_user.getText()+" "+pass);
            String result = in.readLine();
            System.out.println(result);
            if(result.contains("OK"))
            {
                new Interface(skt, in, out).setVisible(true);
            }
            else
            {
                JOptionPane.showMessageDialog(null,"Combinaison identifiant/mot de passe incorrecte"); 
            }
        } catch (IOException ex) {
            Logger.getLogger(Connexion.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_apopActionPerformed

    private void btn_userpassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_userpassActionPerformed
        if(!verfierChamps())
        {
            JOptionPane.showMessageDialog(null,"Veuillez remplir tous les champs");
            return;
        }
        String pass = new String(tf_pass.getPassword());
        try {
            skt = new Socket(tf_ipserv.getText(), 587);
            in = new BufferedReader(new InputStreamReader(skt.getInputStream()));
            out = new PrintWriter(skt.getOutputStream(), true);
            out.write("USER "+tf_user.getText());
            String result = in.readLine();
            System.out.println(result);
            if(result.contains("OK"))
            {
                out.write("PASS "+pass);
                result = in.readLine();
                System.out.println(result);
                if(result.contains("OK"))
                {
                    new Interface(skt, in, out).setVisible(true);
                }
                else
                {
                    JOptionPane.showMessageDialog(null,"Mot de passe incorrect");
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null,"Utilisateur non trouv√©");
            }
            
        } catch (IOException ex) {
            Logger.getLogger(Connexion.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_userpassActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_apop;
    private javax.swing.JButton btn_userpass;
    private javax.swing.JLabel lb_id;
    private javax.swing.JLabel lb_ipserv;
    private javax.swing.JLabel lb_mdp;
    private javax.swing.JLabel lb_title;
    private javax.swing.JTextField tf_ipserv;
    private javax.swing.JPasswordField tf_pass;
    private javax.swing.JTextField tf_user;
    // End of variables declaration//GEN-END:variables

    private boolean verfierChamps() {
        String pass = new String(tf_pass.getPassword());
        return(!tf_ipserv.getText().trim().equals("") && !tf_user.getText().trim().equals("") && !pass.equals(""));
    }
}
